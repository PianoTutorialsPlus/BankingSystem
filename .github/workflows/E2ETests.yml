name: E2E Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  e2e-tests:
    runs-on: windows-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build all projects
      run: dotnet build --configuration Release --no-restore

    - name: Start API with logging
      shell: pwsh
      run: |
        $apiLog = "$env:GITHUB_WORKSPACE\api.log"
        Write-Host "API log will be written to $apiLog"
        $api = Start-Process dotnet `
            -ArgumentList "run --project BankingSystem.Api/BankingSystem.Api.csproj --urls=http://localhost:7178" `
            -RedirectStandardOutput $apiLog `
            -RedirectStandardError $apiLog `
            -NoNewWindow -PassThru
        Write-Host "Started API process Id: $($api.Id)"
        Start-Sleep -Seconds 2  # give it a moment to start
        Get-Content $apiLog -Tail 10

    - name: Start UI with logging
      shell: pwsh
      run: |
        $uiLog = "$env:GITHUB_WORKSPACE\ui.log"
        Write-Host "UI log will be written to $uiLog"
        $ui = Start-Process dotnet `
            -ArgumentList "run --project BankingSystem.UI/BankingSystem.UI.csproj --urls=http://localhost:7247" `
            -RedirectStandardOutput $uiLog `
            -RedirectStandardError $uiLog `
            -NoNewWindow -PassThru
        Write-Host "Started UI process Id: $($ui.Id)"
        Start-Sleep -Seconds 2
        Get-Content $uiLog -Tail 10

    - name: Wait for API and UI
      shell: pwsh
      run: |
        function Wait-ForUrl($url, $timeoutSec=60) {
          $start = Get-Date
          while (((Get-Date) - $start).TotalSeconds -lt $timeoutSec) {
            try {
              $r = Invoke-WebRequest $url -UseBasicParsing -TimeoutSec 5
              if ($r.StatusCode -eq 200) { Write-Host "$url ready"; return }
            } catch {}
            Start-Sleep 2
          }
          throw "Timeout waiting for $url"
        }

        Wait-ForUrl "http://localhost:7178/index.html"   # or /swagger
        Wait-ForUrl "http://localhost:7247/"  # Blazor static file

    - name: Install Playwright browsers
      shell: pwsh
      run: ./BankingSystem.E2ETests/bin/Release/net8.0-windows/playwright.ps1 install --with-deps

    - name: Run E2E Tests
      env:
        BASE_URL: http://localhost:7247
      run: dotnet test BankingSystem.E2ETests/ --configuration Release --no-build --verbosity normal --settings BankingSystem.E2ETests/BankingSystem.E2ETests.runsettings
